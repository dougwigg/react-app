{"version":3,"sources":["projects/Project.module.css","Theme.module.css","HomeTOC.module.css","Body.module.css","Footer.module.css","Header.module.css","logo.svg","ThemeContext.jsx","Header.jsx","BodyHOC.jsx","Footer.jsx","HomeTOC.jsx","projects/Project1.jsx","projects/Project2.jsx","projects/Project3.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ThemeContext","React","ThemeProvider","props","Provider","value","theme","children","Header","Consumer","className","styles","header","BodyHOC","Component","body","class","inner","Footer","setThemeFn","changeTheme","e","preventDefault","target","footer","src","logo","alt","onChange","themeStyles","darkTheme","lightTheme","HomeTOC","itm","to","Project1","backLink","Project2","Project3","App","themeStyle","setThemeStyle","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.60ce6550.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Project_header__1bN6J\",\"backLink\":\"Project_backLink__3_v87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lightTheme\":\"Theme_lightTheme__3eCks\",\"darkTheme\":\"Theme_darkTheme__1mdmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HomeTOC_header__hm2lf\",\"backLink\":\"HomeTOC_backLink__10X8j\",\"itm\":\"HomeTOC_itm__2-aWg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__U13fz\",\"header\":\"Body_header__jnFMr\",\"inner\":\"Body_inner__2YTun\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3V1cF\",\"logo\":\"Footer_logo__3pacW\",\"logo-spin\":\"Footer_logo-spin__3YhBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__6J3mP\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as React from 'react';\n\nexport const ThemeContext = React.createContext();\n\nexport const ThemeProvider = props => {\n  return (\n    <ThemeContext.Provider value={props.theme}>\n      {props.children}\n    </ThemeContext.Provider>\n  );    \n}\n","import * as React from 'react';\n\nimport { ThemeContext } from './ThemeContext';\nimport styles from './Header.module.css';\n\n// Change theme via the props theme setter \nconst Header = () => {\n    return (\n        <ThemeContext.Consumer>\n        { theme => (\n            <header className={`${styles.header} ${theme}`}>\n                React Sandbox      \n            </header>\n        )}\n       </ThemeContext.Consumer>   \n    );\n}\n\nexport default Header;","import * as React from 'react';\n\nimport { ThemeContext } from './ThemeContext';\nimport styles from './Body.module.css';\n\nconst BodyHOC = (Component) => {\n  function Body(props) {\n    return (\n      <ThemeContext.Consumer>\n        { theme => (\n          <section className={`${theme} ${styles.body}`}>\n            <div class={styles.inner}>\n              <Component {...props} /> \n            </div>\n          </section>\n        )}\n      </ThemeContext.Consumer>   \n    )\n  }\n  return Body;\n}\n\nexport default BodyHOC;","import * as React from 'react';\n\nimport logo from './logo.svg';\nimport { ThemeContext } from './ThemeContext';\nimport styles from './Footer.module.css';\nimport themeStyles from './Theme.module.css';\n\n// Change theme via the props theme setter \nconst Footer = ({ setThemeFn }) => {\n    const changeTheme = (e) => {\n      e.preventDefault();    \n      setThemeFn(e.target.value);\n    }\n    \n    return (\n        <ThemeContext.Consumer>\n        { theme => (\n            <footer className={`${styles.footer} ${theme}`}>\n                <img src={logo} className={styles.logo} alt=\"logo\" />  \n                <form>\n                    <label>Select theme:</label>\n                    <select onChange={changeTheme}>\n                        <option value={themeStyles.darkTheme}>dark</option>\n                        <option value={themeStyles.lightTheme}>light</option>\n                    </select>\n                </form>\n            </footer>\n        )}\n       </ThemeContext.Consumer>   \n    );\n}\n\nexport default Footer;","import * as React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styles from './HomeTOC.module.css';\n\nconst HomeTOC = () => {\n    return (\n      <>  \n        <h2 className={styles.header}>Projects:</h2>\n        <ol>\n          <li className={styles.itm}>\n            <Link to=\"/react-app/project1\">Project 1</Link>\n          </li>\n          <li className={styles.itm}>\n            <Link to=\"/react-app/project2\">Project 2</Link>\n          </li>\n          <li className={styles.itm}>\n            <Link to=\"/react-app/project3\">Project 3</Link>\n          </li>\n        </ol>    \n      </>\n    );\n}\n\nexport default HomeTOC;\n","import * as React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styles from './Project.module.css';\n\nconst Project1 = () => {\n  return (\n    <>\n      <h2 className={styles.header}>Project 1</h2> \n      <Link className={styles.backLink} to=\"/react-app/\">Back to Homepage</Link>\n    </>\n  );\n}\n\nexport default Project1;","import * as React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styles from './Project.module.css';\n\nconst Project2 = () => {\n  return (\n    <>\n      <h2 className={styles.header}>Project 2</h2> \n      <Link className={styles.backLink} to=\"/react-app/\">Back to Homepage</Link>\n    </>\n  );\n}\n\nexport default Project2;","import * as React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport styles from './Project.module.css';\n\nconst Project3 = () => {\n  return (\n    <>\n      <h2 className={styles.header}>Project 3</h2> \n      <Link className={styles.backLink} to=\"/react-app/\">Back to Homepage</Link>\n    </>\n  );\n}\n\nexport default Project3;","import * as React from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './Header';\nimport BodyHOC from './BodyHOC';\nimport Footer from './Footer';\n\nimport HomeTOC from './HomeTOC';\nimport Project1 from './projects/Project1';\nimport Project2 from './projects/Project2';\nimport Project3 from './projects/Project3';\n\nimport { ThemeProvider } from './ThemeContext';\nimport themeStyles from './Theme.module.css';\n\nfunction App() {\n  const [themeStyle, setThemeStyle] = React.useState(themeStyles.darkTheme);\n  return (\n    <ThemeProvider theme={themeStyle}>\n      <Header />\n      <Router>\n        <Switch>\n          <Route path='/react-app/' exact component={BodyHOC(HomeTOC)} />\n          <Route path='/react-app/project1' exact component={BodyHOC(Project1)} />\n          <Route path='/react-app/project2' exact component={BodyHOC(Project2)}/>\n          <Route path='/react-app/project3' exact component={BodyHOC(Project3)}/>\n          <Route path='/react-app/' component={BodyHOC(() => <div>That's a 404!</div>)} />\n        </Switch>\n      </Router>\n      <Footer setThemeFn={setThemeStyle} /> \n    </ThemeProvider> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}